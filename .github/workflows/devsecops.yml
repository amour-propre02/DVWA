name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  sast:
    name: Static Application Security Testing (Semgrep)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Semgrep
        run: |
          pip install semgrep

      - name: Run Semgrep SAST scan
        run: |
          semgrep --config auto . || true

  build-and-deploy:
    name: Build & Deploy DVWA
    runs-on: ubuntu-latest
    needs: sast
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: dvwa
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build DVWA Docker image
        run: |
          docker build -t dvwa .

      - name: Run DVWA container
        run: |
          docker run -d -p 8080:80 --name dvwa --link mysql:mysql -e MYSQL_PASS=root dvwa

      - name: Wait for DVWA to be up
        run: |
          sleep 30

  dast:
    name: Dynamic Security Testing (ZAP)
    runs-on: ubuntu-latest
    needs: sast
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Start MySQL for DVWA
        run: |
          docker run -d \
            --name mysql \
            -e MYSQL_ROOT_PASSWORD=root \
            -e MYSQL_DATABASE=dvwa \
            mysql:5.7
  
      - name: Wait for MySQL to be ready
        run: sleep 20
  
      - name: Start DVWA container
        run: |
          docker run -d -p 8080:80 \
            --name dvwa \
            --link mysql:mysql \
            -e MYSQL_PASS=root \
            vulnerables/web-dvwa
  
      - name: Wait for DVWA to initialize
        run: sleep 30
  
      - name: Run OWASP ZAP Baseline Scan
        run: |
          mkdir -p reports
          docker run --network host \
            -v $(pwd)/reports:/zap/wrk/:rw \
            owasp/zap2docker-stable zap-baseline.py \
            -t http://localhost:8080 \
            -r zap_report.html -l MEDIUM
  
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: reports/zap_report.html

